def forecastability(df, column_name):
    """
    Calculates ADI (Average Demand Interval) and square of the Coefficient of Variation (CV²) for a column in a DataFrame.
    """

    adi = round((df[column_name] > 0).mean(),2)
    cv_square = round((df[column_name].std() / df[column_name].mean())**2,2)


    def forecastability_class(adi, cv_square):
        
        if adi < 1.32 and cv_square < 0.49:
            return "SMOOTH"
        elif adi >= 1.32 and cv_square < 0.49:
            return "INTERMITTENT"
        elif adi < 1.32 and cv_square >= 0.49:
            return 'ERRATIC'
        elif adi >= 1.32 and cv_square >= 0.49:
            return 'LUMPY'

    final_class = forecastability_class(adi, cv_square)

    return print(f'ADI: {adi}, CV²: {cv_square}, Forecastability: {final_class}')
